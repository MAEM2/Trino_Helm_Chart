{{- if gt (int .Values.server.workers) 0 }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "trino.worker" . }}
#   name: tmp-dev-trino-worker
  labels:
    app: {{ template "trino.name" . }}
    chart: {{ template "trino.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: worker
    microservice: trino-worker
spec:
  replicas: {{ .Values.server.workers }}
  selector:
    matchLabels:
      app: {{ template "trino.name" . }}
      release: {{ .Release.Name }}
      component: worker
  template:
    metadata:
      labels:
        app: {{ template "trino.name" . }}
        release: {{ .Release.Name }}
        component: worker
        microservice: trino-worker
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      volumes:
        - name: config-volume
          configMap:
            name: {{ template "trino.worker" . }}
        - name: config-volume-hive
          configMap:
            name: {{ template "trino.hive" . }}
        {{ if .Values.exporters.jmx.enabled }}
        - name: config-jmx-exporter
          configMap:
            name: {{ template "trino.jmx-exporter" . }}
        {{ end }}
        - hostPath:
            path: /data1/alluxio/domain
            type: DirectoryOrCreate
          name: alluxio-domain
        - hostPath:
            path: /data1/alluxio/hdd
            type: DirectoryOrCreate
          name: hdd
#         - name: mem-0
#           hostPath:
#             path: /alluxio/mem
#             type: DirectoryOrCreate
#         - name: hdd-1
#           hostPath:
#             path: /data1/alluxio/hdd1
#             type: DirectoryOrCreate  
#         - name: hdd-2
#           hostPath:
#             path: /data1/alluxio/hdd2
#             type: DirectoryOrCreate

#         - name: mem
#           emptyDir:
#             medium: Memory
#             sizeLimit: 1G

      containers:
        - name: trino-worker
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            runAsUser: 0
          volumeMounts:
            - mountPath: {{ .Values.server.config.path }}
              name: config-volume
            - mountPath: {{ .Values.server.config.pathCatalog }}
              name: config-volume-hive
            - name: alluxio-domain
              mountPath: /opt/domain
          env:
            - name: JAVA_OPTS
              value: -Dcom.amazonaws.sdk.disableCertChecking=true
            - name: JAVA_TOOL_OPTIONS
              value: -Dcom.amazonaws.sdk.disableCertChecking=true
            - name: _JAVA_OPTIONS
              value: -Dcom.amazonaws.sdk.disableCertChecking=true
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.storagegrid.secret }}
                  key: s3-access-key
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.storagegrid.secret }}
                  key: s3-secret-key
          ports:
            - name: http
              containerPort: {{ .Values.server.config.http.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /v1/info
              port: http
          readinessProbe:
            httpGet:
              path: /v1/info
              port: http
          lifecycle:
            preStop:
              exec:
                command: [
                  "sh", "-c",
                  "curl -v  -H \"X-Trino-User: admin\" -X PUT -d '\"SHUTTING_DOWN\"' -H \"Content-type: application/json\" http://localhost:8080/v1/info/state && sleep 10"
                ]
          resources:
            limits:
              cpu: {{ .Values.resources.worker.limits.cpu }}
              memory: {{ .Values.resources.worker.limits.memory }}
            requests:
              cpu: {{ .Values.resources.worker.requests.cpu }}
              memory: {{ .Values.resources.worker.requests.memory }}
#           volumeMounts:
#           - mountPath: /opt/domain
#             name: alluxio-domain
#             - mountPath: /alluxio/data/mem
#               name: mem-0
#             - mountPath: /alluxio/data/hdd1
#               name: hdd-1
#             - mountPath: /alluxio/data/hdd2
#               name: hdd-2

  {{ if .Values.exporters.jmx.enabled }}
        - name: jmx-exporter
          image: "{{ .Values.exporters.jmx.image.repository }}:{{ .Values.exporters.jmx.image.tag }}"
          imagePullPolicy: {{ .Values.exporters.jmx.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.exporters.jmx.port }}
              protocol: TCP
              name: exporter
          livenessProbe:
            httpGet:
              path: /metrics
              port: exporter
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 60
            failureThreshold: 8
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /metrics
              port: exporter
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 60
            failureThreshold: 8
            successThreshold: 1
          env:
            - name: SERVICE_PORT
              value: {{ .Values.exporters.jmx.port | quote }}
            {{- with .Values.exporters.jmx.env }}
            {{- range $key, $value := . }}
            - name: {{ $key | upper | replace "." "_" }}
              value: {{ $value | quote }}
          {{- end }}
          {{- end }}
          resources:
            limits:
              cpu: {{ .Values.exporters.jmx.resources.worker.limits.cpu }}
              memory: {{ .Values.exporters.jmx.resources.worker.limits.memory }}
            requests:
              cpu: {{ .Values.exporters.jmx.resources.worker.requests.cpu }}
              memory: {{ .Values.exporters.jmx.resources.worker.requests.memory }}
          volumeMounts:
            - name: config-jmx-exporter
              mountPath: /opt/jmx_exporter/config.yml
              subPath: config.yml
          {{- end }}

#        alluxio container
        - name: trino-alluxio-worker
          image: {{ .Values.alluxio.image }}:{{ .Values.alluxio.imageTag }}
          imagePullPolicy: {{ .Values.alluxio.imagePullPolicy }}
          securityContext:
            runAsUser: 0
          resources:
            limits:
              cpu: "4"
              memory: 4G
            requests:
              cpu: "1"
              memory: 2G
          command: [ "/entrypoint.sh"]
          args:
            - worker-only
            - --no-format
          env:
            - name: JAVA_OPTS
              value: -Dcom.amazonaws.sdk.disableCertChecking=true
            - name: JAVA_TOOL_OPTIONS
              value: -Dcom.amazonaws.sdk.disableCertChecking=true
            - name: _JAVA_OPTIONS
              value: -Dcom.amazonaws.sdk.disableCertChecking=true
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.storagegrid.secret }}
                  key: s3-access-key
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.storagegrid.secret }}
                  key: s3-secret-key
            - name: ALLUXIO_WORKER_HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: ALLUXIO_WORKER_CONTAINER_HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: ALLUXIO_USER_HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          envFrom:
            - configMapRef:
                name: alluxio-config
          readinessProbe:
            tcpSocket:
              port: rpc
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
            successThreshold: 1
          livenessProbe:
            tcpSocket:
              port: rpc
            initialDelaySeconds: 15
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 2
          ports:
            - containerPort: 29999
              name: rpc
            - containerPort: 30000
              name: web
          volumeMounts:
            - mountPath: /opt/domain
              name: alluxio-domain
            - mountPath: /data1/alluxio/hdd
              name: hdd
#             - mountPath: /alluxio/mem
#               name: mem-0
#             - mountPath: /data1/alluxio/hdd1
#               name: hdd-1
#             - mountPath: /data1/alluxio/hdd2
#               name: hdd-2

        - name: trino-alluxio-job-worker
          image: {{ .Values.alluxio.image }}:{{ .Values.alluxio.imageTag }}
          imagePullPolicy: {{ .Values.alluxio.imagePullPolicy }}
          resources:
            limits:
              cpu: "4"
              memory: "4G"
            requests:
              cpu: "1"
              memory: "1G"
          command: [ "/entrypoint.sh"]
          args:
            - job-worker
          env:
            - name: JAVA_OPTS
              value: -Dcom.amazonaws.sdk.disableCertChecking=true
            - name: JAVA_TOOL_OPTIONS
              value: -Dcom.amazonaws.sdk.disableCertChecking=true
            - name: _JAVA_OPTIONS
              value: -Dcom.amazonaws.sdk.disableCertChecking=true
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.storagegrid.secret }}
                  key: s3-access-key
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.storagegrid.secret }}
                  key: s3-secret-key
            - name: ALLUXIO_WORKER_HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: ALLUXIO_WORKER_CONTAINER_HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: ALLUXIO_USER_HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          envFrom:
            - configMapRef:
                name: alluxio-config
          readinessProbe:
            tcpSocket:
              port: job-rpc
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
            successThreshold: 1
          livenessProbe:
            tcpSocket:
              port: job-rpc
            initialDelaySeconds: 15
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 2
          ports:
            - containerPort: 30001
              name: job-rpc
            - containerPort: 30002
              name: job-data
            - containerPort: 30003
              name: job-web
          volumeMounts:
            - mountPath: /opt/domain
              name: alluxio-domain
            - mountPath: /data1/alluxio/hdd
              name: hdd
#             - mountPath: /alluxio/mem
#               name: mem-0
#             - mountPath: /data1/alluxio/hdd1
#               name: hdd-1
#             - mountPath: /data1/alluxio/hdd2
#               name: hdd-2

    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}

{{- end }}
